# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

 # Profile Service
    App\Service\ProfileService:
        class: App\Service\ProfileService
        arguments:
            $profileRepository: '@App\Repository\ProfileRepository'
            $roleService: '@App\Service\RoleService'
            $serializer: '@serializer'  # Assuming you have the serializer service available

        # Optionally, you can specify other settings like public, autowire, autoconfigure
        public: true  # Make the service accessible outside the container (optional)
        autowire: true  # Enable automatic dependency injection (optional)
        autoconfigure: true  # Allow the service to be configured automatically (optional)
        

    App\Service\UserService:
        class: App\Service\UserService
        arguments:
            $userRepository: '@App\Repository\UserRepository'
            $serializer: '@serializer'  # Assuming you have the serializer service available

        # Optionally, you can specify other settings like public, autowire, autoconfigure
        public: true  # Make the service accessible outside the container (optional)
        autowire: true  # Enable automatic dependency injection (optional)
        autoconfigure: true  # Allow the service to be configured automatically (optional)

        
